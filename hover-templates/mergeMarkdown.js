const fs = require('fs');
const path = require('path');
const Handlebars = require('handlebars');

// Directory where the markdown files are stored
const markdownDir = 'hover-templates';

// Output file
const outputFilePath = 'src/hoverMap.js';

// Template for combining files
const template = Handlebars.compile(
`// Do not edit: autogenerated during package phase

const hoverMap = new Map();

{{#each files}}
hoverMap.set('{{fileName}}', 
\`{{{content}}}\`
);

{{/each}}

module.exports = { hoverMap };
`);

// Function to merge markdown files
const mergeMarkdownFiles = () => {
  fs.readdir(markdownDir, (err, files) => {
    if (err) {
      console.error('Error reading directory:', err);
      return;
    }

    const markdownFiles = files.filter(file => file.endsWith('.md'));
    const combinedContent = [];

    markdownFiles.forEach(file => {
      const filePath = path.join(markdownDir, file);
      const fileContent = fs.readFileSync(filePath, 'utf-8').replace(/`/g, '\\`');
      const fileNameWithoutExt = path.basename(file, '.md');

      combinedContent.push({
        fileName: fileNameWithoutExt,
        content: fileContent
      });
    });

    // Generate the final output using the template
    const output = template({ files: combinedContent });

    // Write the output to a single file
    fs.writeFileSync(outputFilePath, output, 'utf-8');
    console.log(`Merged markdown files into ${outputFilePath}`);
  });
};

mergeMarkdownFiles();
